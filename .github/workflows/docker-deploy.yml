name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Iniciar sesión en DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construir y subir la imagen de la aplicación PHP
      - name: Build and push PHP Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/calculadora-web:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/calculadora-web:latest

      # Transferir el archivo docker-compose.yml al servidor remoto
      - name: Transfer docker-compose.yml to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          source: ./docker-compose.yml
          target: ~/deploy/

      # Desplegar la aplicación en el servidor remoto usando docker-compose
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            # Instalar Docker Compose si no está disponible
            if ! [ -x "$(command -v docker-compose)" ]; then
              echo 'Docker Compose no está instalado. Instalando...'
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            else
              echo 'Docker Compose ya está instalado.'
            fi

            # Asegurarse de que el socket de Docker tenga permisos adecuados
            sudo chmod 666 /var/run/docker.sock

            # Detener y eliminar cualquier contenedor existente
            docker-compose down || true

            # Descargar la nueva imagen
            docker-compose pull

            # Levantar el contenedor con la nueva imagen
            docker-compose up -d
