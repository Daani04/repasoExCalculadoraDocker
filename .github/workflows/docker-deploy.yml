name: Docker Build, Push, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: tuusuario/tu-repositorio:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to AWS
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          # Conectar al servidor de AWS
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "
            # Crear el directorio de despliegue si no existe
            mkdir -p $DEPLOY_PATH
            cd $DEPLOY_PATH

            # Detener y eliminar el contenedor anterior si existe
            docker-compose down || true

            # Eliminar la imagen antigua
            docker rmi tuusuario/tu-repositorio:latest || true

            # Iniciar sesi√≥n en DockerHub
            echo '$DOCKERHUB_TOKEN' | docker login -u '$DOCKERHUB_USERNAME' --password-stdin

            # Descargar la nueva imagen
            docker-compose pull

            # Ejecutar el contenedor
            docker-compose up -d
          "